{"version":3,"sources":["App.js","index.js"],"names":["App","useState","displayName","setDisplayName","meetingNumber","setMeetingNumber","meetingPassword","setMeetingPassword","useEffect","ZoomMtg","preLoadWasm","prepareJssdk","id","className","href","onSubmit","e","preventDefault","value","type","name","maxLength","placeholder","onChange","target","required","style","width","onClick","meetConfig","apiKey","apiSecret","parseInt","userName","passWord","leaveUrl","role","signature","generateSignature","success","res","console","log","result","init","join","$","hide","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KA+KeA,EAlGH,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACTC,EADS,KACIC,EADJ,OAE0BF,mBAAS,IAFnC,mBAETG,EAFS,KAEMC,EAFN,OAG8BJ,mBAAS,IAHvC,mBAGTK,EAHS,KAGQC,EAHR,KA6DhB,OALAC,qBAAU,WACRC,QAAQC,cACRD,QAAQE,iBACP,IAGH,6BACM,yBAAKC,GAAG,WAAWC,UAAU,0CAC7B,yBAAKA,UAAU,aACX,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,gBAEJ,yBAAKF,GAAG,SAASC,UAAU,cACvB,0BAAME,SAfC,SAAAC,GAAC,OAAIA,EAAEC,kBAegBJ,UAAU,2BAA2BD,GAAG,gBAClE,yBAAKC,UAAU,cACX,2BAAOK,MAAOhB,EAAaiB,KAAK,OAAOC,KAAK,eAAeR,GAAG,eAAeS,UAAU,MACnFC,YAAY,YAAYC,SAAU,SAAAP,GAAC,OAAIb,EAAea,EAAEQ,OAAON,QAAQL,UAAU,eAAeY,UAAQ,KAEhH,yBAAKZ,UAAU,cACX,2BAAOM,KAAK,OAAOC,KAAK,iBAAiBR,GAAG,iBAAiBM,MAAOd,EAAeiB,UAAU,KACzFK,MAAO,CAAEC,MAAO,SAAWJ,SAAU,SAAAP,GAAC,OAAIX,EAAiBW,EAAEQ,OAAON,QAAQI,YAAY,iBAAiBT,UAAU,eAAeY,UAAQ,KAElJ,yBAAKZ,UAAU,cACX,2BAAOM,KAAK,OAAOC,KAAK,cAAcR,GAAG,cAAcW,SAAU,SAAAP,GAAC,OAAIT,EAAmBS,EAAEQ,OAAON,QAAQA,MAAOZ,EAAiBoB,MAAO,CAAEC,MAAO,SAC9IN,UAAU,KAAKC,YAAY,mBAAmBT,UAAU,kBAGhE,4BAAQe,QA9EP,WACT,IAAMC,EAAa,CACnBC,OA9EI,yBA+EJC,UA9EO,uCA+EP3B,cAAe4B,SAAS5B,GACxB6B,SAAU/B,EACVgC,SAAU5B,EACV6B,SAAU,kBACVC,KAAM,GAGJC,EAAY5B,QAAQ6B,kBAAkB,CACxClC,cAAeyB,EAAWzB,cAC1B0B,OAAQD,EAAWC,OACnBC,UAAWF,EAAWE,UACtBK,KAAMP,EAAWO,KACjBG,QAAS,SAASC,GACdC,QAAQC,IAAIF,EAAIG,WAIxBF,QAAQC,IAAIb,GAEZpB,QAAQmC,KAAK,CACTT,SAAU,qBACVI,QAAS,WACL9B,QAAQoC,KACJ,CACIzC,cAAeyB,EAAWzB,cAC1B6B,SAAUJ,EAAWI,SACrBI,UAAWA,EACXP,OAAQD,EAAWC,OACnBI,SAAUL,EAAWK,SACrBK,QAAS,SAASC,GACdM,EAAE,aAAaC,OACfN,QAAQC,IAAI,yBAEhBM,MAAO,SAASR,GACZC,QAAQC,IAAIF,OAK5BQ,MAAO,SAASR,GACZC,QAAQC,IAAIF,OAkCqB3B,UAAU,kBAAkBD,GAAG,gBAA5D,QACA,4BAAQC,UAAU,kBAAkBD,GAAG,aAAvC,eC5JpBqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.34467f0e.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable no-undef */\nimport React, { useState, useEffect } from 'react';\n\nimport testTool from './tool';\n\nconst API_KEY = 'GG-QnD4ARsSheZwfl4ng0A';\nconst API_SECRET = 'Q3ybAFytf4F1YkPbgxFiX289c5w1IYu26ijV';\n\n// (function(){\n//     document.getElementById('join_meeting').addEventListener('click', function(e){\n\n//         e.preventDefault();\n\n//         if(!this.form.checkValidity()){\n//             alert(\"Enter Name and Meeting Number\");\n//             return false;\n//         }\n\n//         var meetConfig = {\n//             apiKey: API_KEY,\n//             apiSecret: API_SECRET,\n//             meetingNumber: parseInt(document.getElementById('meeting_number').value),\n//             userName: document.getElementById('display_name').value,\n//             passWord: document.getElementById('meeting_pwd').value,\n//             leaveUrl: \"https://zoom.us\",\n//             role: parseInt(document.getElementById('meeting_role').value, 10)\n//         };\n//         testTool.setCookie(\"meeting_number\", meetConfig.meetingNumber);\n//         testTool.setCookie(\"meeting_pwd\", meetConfig.passWord);\n\n//         console.log( meetConfig.role);\n        \n\n//         var signature = ZoomMtg.generateSignature({\n//             meetingNumber: meetConfig.meetingNumber,\n//             apiKey: meetConfig.apiKey,\n//             apiSecret: meetConfig.apiSecret,\n//             role: meetConfig.role,\n//             success: function(res){\n//                 console.log(res.result);\n//             }\n//         });\n\n//         ZoomMtg.init({\n//             leaveUrl: 'http://www.zoom.us',\n//             success: function () {\n//                 ZoomMtg.join(\n//                     {\n//                         meetingNumber: meetConfig.meetingNumber,\n//                         userName: meetConfig.userName,\n//                         signature: signature,\n//                         apiKey: meetConfig.apiKey,\n//                         passWord: meetConfig.passWord,\n//                         success: function(res){\n//                             $('#nav-tool').hide();\n//                             ZoomMtg.showRecordFunction({\n//                                 show: true\n//                              });\n//                             console.log('join meeting success');\n//                         },\n//                         error: function(res) {\n//                             console.log(res);\n//                         }\n//                     }\n//                 );\n//             },\n//             error: function(res) {\n//                 console.log(res);\n//             }\n//         });\n\n//     });\n\n// })();\n\n\nconst App = () => {\n  const [displayName, setDisplayName] = useState('');\n  const [meetingNumber, setMeetingNumber] = useState('');\n  const [meetingPassword, setMeetingPassword] = useState('');\n\n  const handleJoin = () => {\n            const meetConfig = {\n            apiKey: API_KEY,\n            apiSecret: API_SECRET,\n            meetingNumber: parseInt(meetingNumber),\n            userName: displayName,\n            passWord: meetingPassword,\n            leaveUrl: \"https://zoom.us\",\n            role: 0\n        }\n\n        const signature = ZoomMtg.generateSignature({\n            meetingNumber: meetConfig.meetingNumber,\n            apiKey: meetConfig.apiKey,\n            apiSecret: meetConfig.apiSecret,\n            role: meetConfig.role,\n            success: function(res){\n                console.log(res.result);\n            }\n        });\n\n        console.log(meetConfig);\n\n        ZoomMtg.init({\n            leaveUrl: 'http://www.zoom.us',\n            success: function () {\n                ZoomMtg.join(\n                    {\n                        meetingNumber: meetConfig.meetingNumber,\n                        userName: meetConfig.userName,\n                        signature: signature,\n                        apiKey: meetConfig.apiKey,\n                        passWord: meetConfig.passWord,\n                        success: function(res){\n                            $('#nav-tool').hide();\n                            console.log('join meeting success');\n                        },\n                        error: function(res) {\n                            console.log(res);\n                        }\n                    }\n                );\n            },\n            error: function(res) {\n                console.log(res);\n            }\n        });\n  }\n\n  const handleSubmit = e => e.preventDefault();\n\n  useEffect(() => {\n    ZoomMtg.preLoadWasm();\n    ZoomMtg.prepareJssdk();\n  }, []);\n\n  return (\n  <div>\n        <nav id=\"nav-tool\" className=\"navbar navbar-inverse navbar-fixed-top\">\n        <div className=\"container\">\n            <div className=\"navbar-header\">\n                <a className=\"navbar-brand\" href=\"#\">Zoom WebSDK</a>\n            </div>\n            <div id=\"navbar\" className=\"websdktest\">\n                <form onSubmit={handleSubmit} className=\"navbar-form navbar-right\" id=\"meeting_form\">\n                    <div className=\"form-group\">\n                        <input value={displayName} type=\"text\" name=\"display_name\" id=\"display_name\" maxLength=\"100\"\n                            placeholder=\"Your name\" onChange={e => setDisplayName(e.target.value)} className=\"form-control\" required />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"meeting_number\" id=\"meeting_number\" value={meetingNumber} maxLength=\"11\"\n                            style={{ width: '150px' }} onChange={e => setMeetingNumber(e.target.value)} placeholder=\"Meeting Number\" className=\"form-control\" required />\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"meeting_pwd\" id=\"meeting_pwd\" onChange={e => setMeetingPassword(e.target.value)} value={meetingPassword} style={{ width: '150px' }}\n                            maxLength=\"32\" placeholder=\"Meeting Password\" className=\"form-control\" />\n                    </div>\n\n                    <button onClick={handleJoin} className=\"btn btn-primary\" id=\"join_meeting\">Join</button>\n                    <button className=\"btn btn-primary\" id=\"clear_all\">Clear</button>\n\n                </form>\n            </div>\n        </div>\n    </nav>\n\n    \n    {/* <div id=\"show-test-tool\">\n        <button type=\"submit\" className=\"btn btn-primary\" id=\"show-test-tool-btn\" title=\"show or hide top test tool\">Show</button>\n    </div> */}\n  </div>\n)}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}